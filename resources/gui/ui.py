# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(1205, 800)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(10)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setStyleSheet("background-color: rgb(45, 45, 48);")
        MainWindow.setDocumentMode(False)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        MainWindow.setDockNestingEnabled(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(90, 10, 241, 54))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.heading_subheading = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.heading_subheading.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.heading_subheading.setContentsMargins(0, 0, 0, 0)
        self.heading_subheading.setSpacing(0)
        self.heading_subheading.setObjectName("heading_subheading")
        self.ains_heading = QtWidgets.QLabel(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Georama Black")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.ains_heading.setFont(font)
        self.ains_heading.setScaledContents(True)
        self.ains_heading.setObjectName("ains_heading")
        self.heading_subheading.addWidget(self.ains_heading)
        self.ains_subheading = QtWidgets.QLabel(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Inter")
        self.ains_subheading.setFont(font)
        self.ains_subheading.setObjectName("ains_subheading")
        self.heading_subheading.addWidget(self.ains_subheading)
        self.perturb_tabs = QtWidgets.QTabWidget(self.centralwidget)
        self.perturb_tabs.setGeometry(QtCore.QRect(20, 80, 631, 671))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(10)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.perturb_tabs.sizePolicy().hasHeightForWidth())
        self.perturb_tabs.setSizePolicy(sizePolicy)
        self.perturb_tabs.setMaximumSize(QtCore.QSize(1161, 16777215))
        font = QtGui.QFont()
        font.setFamily("Inter")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.perturb_tabs.setFont(font)
        self.perturb_tabs.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.perturb_tabs.setMouseTracking(False)
        self.perturb_tabs.setAcceptDrops(False)
        self.perturb_tabs.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.perturb_tabs.setAutoFillBackground(False)
        self.perturb_tabs.setStyleSheet("")
        self.perturb_tabs.setTabPosition(QtWidgets.QTabWidget.North)
        self.perturb_tabs.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.perturb_tabs.setUsesScrollButtons(True)
        self.perturb_tabs.setDocumentMode(False)
        self.perturb_tabs.setTabsClosable(False)
        self.perturb_tabs.setMovable(False)
        self.perturb_tabs.setTabBarAutoHide(False)
        self.perturb_tabs.setObjectName("perturb_tabs")
        self.attach = QtWidgets.QWidget()
        self.attach.setObjectName("attach")
        self.layoutWidget = QtWidgets.QWidget(self.attach)
        self.layoutWidget.setGeometry(QtCore.QRect(20, 20, 591, 75))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.attach_title = QtWidgets.QVBoxLayout()
        self.attach_title.setSpacing(0)
        self.attach_title.setObjectName("attach_title")
        self.attach_heading = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Inter")
        font.setPointSize(28)
        font.setBold(True)
        font.setWeight(75)
        self.attach_heading.setFont(font)
        self.attach_heading.setScaledContents(False)
        self.attach_heading.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.attach_heading.setWordWrap(False)
        self.attach_heading.setIndent(0)
        self.attach_heading.setObjectName("attach_heading")
        self.attach_title.addWidget(self.attach_heading)
        self.attach_subheading = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Inter")
        font.setPointSize(10)
        font.setKerning(True)
        self.attach_subheading.setFont(font)
        self.attach_subheading.setObjectName("attach_subheading")
        self.attach_title.addWidget(self.attach_subheading)
        self.horizontalLayout.addLayout(self.attach_title)
        spacerItem = QtWidgets.QSpacerItem(198, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.perturb_tabs.addTab(self.attach, "")
        self.tweak = QtWidgets.QWidget()
        self.tweak.setObjectName("tweak")
        self.perturb_tabs.addTab(self.tweak, "")
        self.run = QtWidgets.QWidget()
        self.run.setObjectName("run")
        self.perturb_tabs.addTab(self.run, "")
        self.logo = QtWidgets.QLabel(self.centralwidget)
        self.logo.setGeometry(QtCore.QRect(20, 20, 41, 41))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.logo.sizePolicy().hasHeightForWidth())
        self.logo.setSizePolicy(sizePolicy)
        self.logo.setText("")
        self.logo.setPixmap(QtGui.QPixmap("../../../../../../../../../Downloads/ainz.png"))
        self.logo.setScaledContents(True)
        self.logo.setObjectName("logo")
        self.display_attached_image = QtWidgets.QLabel(self.centralwidget)
        self.display_attached_image.setGeometry(QtCore.QRect(680, 102, 501, 531))
        font = QtGui.QFont()
        font.setFamily("Inter")
        font.setPointSize(28)
        font.setBold(False)
        font.setWeight(50)
        self.display_attached_image.setFont(font)
        self.display_attached_image.setScaledContents(False)
        self.display_attached_image.setAlignment(QtCore.Qt.AlignCenter)
        self.display_attached_image.setWordWrap(False)
        self.display_attached_image.setIndent(0)
        self.display_attached_image.setObjectName("display_attached_image")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1205, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.perturb_tabs.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "AI-No-Swiping"))
        self.ains_heading.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:16pt; color:#27c9bb;\">AI-No-Swiping</span></p></body></html>"))
        self.ains_subheading.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; color:#ffffff;\">Protect your art from AI misuse!</span></p></body></html>"))
        self.attach_heading.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#d1f35d;\">Upload your art.</span></p></body></html>"))
        self.attach_subheading.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#5e5d5d;\">Attach the artwork that you want to protect. It must be in .png, or .jpeg format.</span></p></body></html>"))
        self.perturb_tabs.setTabText(self.perturb_tabs.indexOf(self.attach), _translate("MainWindow", "1. Attach Images"))
        self.perturb_tabs.setTabText(self.perturb_tabs.indexOf(self.tweak), _translate("MainWindow", "2. Tweak"))
        self.perturb_tabs.setTabText(self.perturb_tabs.indexOf(self.run), _translate("MainWindow", "3. Run"))
        self.display_attached_image.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; color:#5e5d5d;\">Your image will be displayed here.</span></p></body></html>"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

# def start():
#     # Define the directory containing the images
#     image_dir = "resources/images/clean_images/vanGogh/for-training/portraits"

#     # # Check if the directory exists
#     # if not os.path.isdir(image_dir):
#     #     print(f"Error: Directory not found - {image_dir}")
#     #     return

#     # print(f"Processing images in directory: {image_dir}")

#     # # Loop through all files in the directory
#     # for filename in os.listdir(image_dir):
#     #     # Check if the file is a .png or .jpg image (case-insensitive)
#     #     if filename.lower().endswith((".png", ".jpg")):
#     #         image_path = os.path.join(image_dir, filename)
#     #         print(f"\n--- Processing image: {filename} ---")

#     #         try:
#     #             image = Image.open(image_path)
#     #         except Exception as e:
#     #             print(f"Error opening image {filename}: {e}")
#     #             continue  # Skip to the next file if opening fails

#     #         # --- Perform the same operations as before ---
#     #         rows, cols = determine_tiling_dimensions(image)
#     #         tile_width, tile_height = compute_tile_size(image, rows, cols)

#     #         # Ensure overlap_size is an integer
#     #         overlap_size = int(tile_height * 0.1)

#     #         print(
#     #             f"  Tiling with {rows} rows, {cols} columns. Overlap: {overlap_size}px"
#     #         )

#     #         input_image_processor = TileInator(
#     #             overlap_size=overlap_size,
#     #             image=image,
#     #             tile_width=tile_width,
#     #             tile_height=tile_height,
#     #             num_cols=cols,
#     #             num_rows=rows,
#     #         )
#     #         try:
#     #             input_image_processor.process_image()
#     #             print(f"  Finished processing {filename}.")
#     #         except Exception as e:
#     #             print(f"Error processing image {filename}: {e}")
#     #             # Optionally add more detailed error logging here
#     #         # --- End of operations ---
#     #     else:
#     #         # Optional: Print message for non-image files found
#     #         # print(f"Skipping non-image file: {filename}")
#     #         pass

#     print("\n--- Finished processing all images in the directory ---")